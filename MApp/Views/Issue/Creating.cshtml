@using PerpetuumSoft.Knockout
@model MApp.Web.ViewModel.CreatingVM
@{
    var ko = Html.CreateKnockoutContext();
    ViewBag.Title = "Issue - " + @Model.Issue.Title;
}
<div class="page-header">
    <h2>Creating</h2>
</div>

<div class="container">
    <div class="col-md-7">
        <div class="form-group">
            <label for="titleInput">Title</label>
            <input id="titleInput" class="form-control" data-bind="textInput: viewModel.Issue.Title" />
            <label for="description">Description</label>
            <textarea class="form-control" data-bind="value: viewModel.Issue.Description" id="description" name="description"></textarea>
            <label for="issueStatus">Issue status:</label>
            <label id="issueStatus" data-bind="text: viewModel.Issue.Status"></label>
            <div class="checkbox">
                <label id="anonymousPostingLabel">
                    Anonymous posting? <input id="anonymous" type="checkbox" data-bind="checked: viewModel.Issue.AnonymousPosting" />
                </label>
            </div>
            <p>
                <label for="selectRootIssue">Parent Issue:</label>
                <select class="selectpicker" data-live-search="true" id="selectRootIssue" data-bind="options: viewModel.Issues, optionsText: 'Title', optionsValue: 'Id', value: viewModel.Issue.Parent"></select>
                <a data-bind="text: viewModel.parentDDText, attr: {href: '?issueId=' + viewModel.Issue.Parent}"></a>
            </p>
            <p>
                <label for="selectdependsOnIssue">Depends on Issue:</label>
                <select class="selectpicker" data-live-search="true" id="selectdependsOnIssue" data-bind="options: viewModel.Issues, optionsText: 'Title', optionsValue: 'Id', value: viewModel.Issue.DependsOn"></select>
            </p>

        </div>
        <button id="save" type="button" class="btn btn-success" onclick="javascript: onSaveClick()">Save</button>
    </div>


    <div class="col-md-5">
        <label for="tokenfield">Issue Tags</label>
        <input type="text" class="form-control" id="tokenfield" />
        @*<label for="Users">Access Rights</label>*@

        <p>
            <select class="selectpicker" data-live-search="true" id="selectUser" data-width="auto" data-bind="options: viewModel.AllUsers, optionsText: 'Name', optionsValue: 'Id'"></select>
            <select class="selectpicker" id="selectRight" data-width="auto">
                <option>Contributor</option>
                <option>Viewer</option>
                <option>Owner</option>
            </select>
            <button id="addRight" type="button" class="btn btn-primary btn-xs" onclick="javascript: onAddRightClick()">Add</button>
        </p>

        <table id="userTable" class="table table-hover table-striped table-condensed">
            <thead align="left">
                <tr>
                    <th>Name</th>
                    <th>Right</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: viewModel.AccessRights">
                <tr>
                    <td data-bind="text: Name"></td>
                    <td data-bind="text: Right"></td>
                    <td><a class="btn btn-danger btn-xs" href="#" data-bind="click: $parent.removeRight">Remove</a></td>
                </tr>
            </tbody>
        </table>
    </div>
    
</div>


@ko.Apply(Model)


<script type="text/javascript">
    var addedTags = [];
    var deletedTags = [];

    function onSaveClick() {
        var tmpVM = ko.toJS(viewModel)

        tmpVM.AddedTags = addedTags;
        tmpVM.DeletedTags = deletedTags;
        ko.utils.postJson("", { CreatingVM: tmpVM })
    }

    function onAddRightClick() {
        var uid = $('#selectUser').selectpicker('option:selected').val();
        if (uid != 0) {
            var uText = ""
            for (index = 0; index < viewModelJs.AllUsers.length; ++index) {
                if (viewModelJs.AllUsers[index].Id == uid) {
                    uText = viewModelJs.AllUsers[index].Name
                }
            }
            viewModel.AccessRights.push({ UserId: uid, Right: $('#selectRight').selectpicker('option :selected').val(), Name: uText });
            viewModel.AllUsers.splice($('#selectUser').selectpicker('option :selected').index(), 1)
            $('#selectUser').find('[value=' + uid + ']').remove();
            $('#selectUser').selectpicker('refresh');
        } else {
            alert('Please select User first');
        }
        
    };

    viewModel.parentDDText = ko.computed(function () {
        return $("#selectRootIssue option[value='" + viewModel.Issue.Parent() + "']").text();
    });

    viewModel.removeRight = function () {
        viewModel.AccessRights.remove(this);
    };

    $(document).ready(function () {
        var token = [];
        var engine;

        var allTags = []
        for (var j = 0; j < viewModelJs.AllTags.length; j++) {
            allTags.push({ value: viewModelJs.AllTags[j].Id, label: viewModelJs.AllTags[j].Name })
        }

        var issueTags = []
        for (var j = 0; j < viewModelJs.Issue.Tags.length; j++) {
            issueTags.push({ value: viewModelJs.Issue.Tags[j].Id, label: viewModelJs.Issue.Tags[j].Name })
        }

        $('#tokenfield')
            .tokenfield({
                autocomplete: {
                    source: allTags,
                    delay: 100
                },
                showAutocompleteOnFocus: true
            })
            .tokenfield('setTokens', issueTags)
        ;

        usrProp = viewModelJs.Issue.Tags;

        $('#tokenfield').on('tokenfield:createtoken', function (e) {
            var tokenExists = false
            for (i = 0; i < usrProp.length; i++) {
                if (usrProp[i].Name == e.attrs.label) {
                    tokenExists = true
                    alert('Property already exists')
                }
            }
            if (tokenExists) {
                event.preventDefault();
                event.stopImmediatePropagation();
                return;
            } else {
                if (e.attrs.label == e.attrs.value) {
                    e.attrs.value = -1
                }
                usrProp.push({ Id: e.attrs.value, Name: e.attrs.label })
                addedTags.push({ Id: e.attrs.value, Name: e.attrs.label })
            }
        });

        $('#tokenfield').on('tokenfield:removedtoken', function (e) {
            var idx;
            for (i = 0; i < usrProp.length; i++) {
                if (usrProp[i].Id > 0 && parseInt(e.attrs.value) == usrProp[i].Id) {
                    idx = i
                } else if (usrProp[i].Name == e.attrs.label) {
                    idx = i
                }

            }
            deletedTags.push({ Id: e.attrs.value, Name: e.attrs.label })
        });
    });
</script>