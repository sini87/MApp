@using PerpetuumSoft.Knockout
@model MApp.Web.ViewModel.CriteriaWeightsVM
@{
    ViewBag.Title = Model.Issue.Title + " - Criteria Weighting";
    var ko = Html.CreateKnockoutContext();
}

<div class="page-header">
    <h3>Criteria Weighting</h3>
</div>

@if (Model.AccessRight != "V")
{
    <span>
        <table id="criteriaWeightsTable" class="table table-hover table-condensed table-nonfluid">
            <thead align="left">
                <tr>
                    <th>Criteria</th>
                    <th>Your Weight</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: viewModel.UserWeights">
                <tr>
                    <td><label data-bind="text: Name" /></td>
                    <td><input data-bind="textInput: Weight, valueUpdate:'afterkeydown', attr: {id: 'CriterionWeight' + CriterionId}" type="number" min="0" max="100" class="form-control number-in-table" /></td>
                </tr>
            </tbody>
            <tr>
                <td>
                    <label data-bind="css: { error: viewModel.PercentSum() != 100 }">Sum</label>
                </td>
                <td class="number-in-table">
                    <div data-bind="css: { error: viewModel.PercentSum() != 100 }">
                        <span id="sumlbl" data-bind="text: viewModel.WeightSum" class="table-sum" aria-describedby="inputErrors"></span>
                        <label>%</label>
                    </div>
                </td>
                <td>
                    <p data-bind="css: { error: viewModel.PercentSum() != 100 }">
                        <span data-bind="validationMessage: PercentSum" class="validationMessage"></span>
                    </p>
                </td>
            </tr>
        </table>
    </span>
}else
{
    <h4>you are not allowed to vote!</h4>
}


<button id="save" class="btn btn-primary btn-md" onclick="onSaveClick()" data-bind="enable: viewModel.PercentSum() == 100, visible: viewModelJs.AccessRight != 'V'">Save</button>
<button id="next" class="btn btn-primary btn-md" onclick="onNextStageClick()" data-bind="enable: viewModel.PercentSum() == 100, visible: viewModelJs.AccessRight == 'O'">Next Stage</button>

<script>
    var viewModelJs = @Html.Raw(Json.Encode(Model));
    var viewModel = ko.mapping.fromJS(viewModelJs);
    viewModel.WeightSum = ko.computed(function () {
        var sum = 0;
        for (i = 0; i < viewModel.UserWeights().length; i++) {
            sum = parseFloat(sum) + parseFloat(viewModel.UserWeights()[i].Weight());
        }
        return sum;
    });


    viewModel.PercentSum = ko.computed(function() {
        var total = 0.0;
        for (var i = 0; i < viewModel.UserWeights().length; i++)
        {
            var entry = viewModel.UserWeights()[i];
            total += Number(entry.Weight());
        }
        return total;
    });
    viewModel.hasError = ko.observable(false);
    ko.validation.rules['mustEqual'] = {
        validator: function (val, otherVal) {
            if (val != otherVal){
                viewModel.hasError(true);
            }else{
                viewModel.hasError(false);
            }
            return val === otherVal;
        },
        message: 'The field must equal {0}'
    };
    ko.validation.registerExtenders();
    viewModel.PercentSum.extend({ mustEqual: { params: 100, message: "Weight sum must be 100" } });

    ko.applyBindings(viewModel);

    renderMenues()

    var weights = document.querySelectorAll('*[id^="CriterionWeight"]');
    for (i = 0; i < weights.length; i++){
        //weights[i].TouchSpin({
        //    min: 0,
        //    max: 100,
        //    step: 0.1,
        //    decimals: 2,
        //    boostat: 5,
        //    maxboostedstep: 10,
        //    postfix: '%'
        //});
    }

    function onSaveClick() {
        var tmpVM = ko.toJS(viewModel)
        ko.utils.postJson("", { CriteriaWeightsVM: tmpVM })
    }

    function onNextStageClick() {
        ko.utils.postJson("/Issue/NextStage", { issueId: viewModel.Issue.Id, status: viewModel.Issue.Status })
    };

    function onAddCommentClick() {

    }
</script>