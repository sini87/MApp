@using PerpetuumSoft.Knockout
@model MApp.Web.ViewModel.DecisionVM
@{
    var ko = Html.CreateKnockoutContext();
    ViewBag.Title = Model.Issue.Title + " - Decide";

    bool visible, enabled;
    if (Model.AccessRight == "O")
    {
        visible = true;
        enabled = true;
    }else
    {
        visible = false;
        enabled = false;
    }
}
<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/Scripts/numeral.js"></script>

<div>
    <h3><span data-bind="text: viewModel.Issue.Title"></span></h3>
    <p class="site-subheader">Decide</p>
    <hr class="myhr" />
</div>
<div class="some">
    <h3>Voting Results</h3>
    <table class="table table-nonfluid restable">
        <thead>
        <th>Alternative</th>
        @if (Model.Issue.Setting == "A")
        {
            <th class="td-center-top">Score</th>
        }
        else
        {
            <th class="td-center-top">Ranking</th>
        }
        </thead>
        <tbody data-bind="foreach: viewModel.Alternatives">
                <tr>
                    <td data-bind="text: Name"></td>
                    @if (Model.Issue.Setting == "A")
                    {
                        <td class="td-right-top rank-column"><span class="divpadd" data-bind="text: numeral(Rating()).format('0[.]00')"></span></td>
                    }
                    else
                    {
                        <td class="td-right-top rank-column"><span class="divpadd" data-bind="text: numeral(Rating()).format('(0.00 %)')"></span></td>
                    }
                </tr>
        </tbody>
    </table>
</div>



@if (Model.AccessRight == "O" && Model.Issue.Status != "CLOSED")
{


    <div class="form-group">
        <div data-bind="if: viewModel.Decision.AlternativeId() == 0">
            <h4>Select Alternative</h4>
        </div>
        <div data-bind="foreach: viewModel.Alternatives">
            <label>
                <input type="radio" name="altRadio" data-bind="checkedValue: Id, checked: viewModel.Decision.AlternativeId" />
                <span data-bind="text: Name"></span>
                <br />
            </label>
        </div>
        <div data-bind="visible: viewModel.Decision.AlternativeId() > 0">
            <textarea data-bind="value: viewModel.Decision.Explanation" id="explanationText" class="form-control textarea-desc" rows="4"></textarea>
        </div>
    </div>
    <!-- ko if: viewModel.Issue.Status() == 'FINISHED' -->
        <button id="save" type="button" class="btn btn-primary" onclick="javascript: onUpdateClick()" data-bind="visible: viewModel.update">Update Explanation</button>
        <button id="updateDecisionBtn" type="button" class="btn btn-primary" onclick="javascript: onSaveClick()" data-bind="visible: viewModel.overthink">Change Decision</button>
    <!-- /ko -->
    <!-- ko if: viewModel.Issue.Status() == 'DECIDING' -->
        <button id="makeDecisionBtn" type="button" class="btn btn-primary" onclick="javascript: onSaveClick()" data-bind="enable: viewModel.Decision.AlternativeId() > 0">Make Decision</button>
    <!-- /ko -->
}
else
{
    <!-- ko if: viewModel.Issue.Status() == 'DECIDING' -->
        <h3>Issue owner has made no decision yet</h3>
    <!-- /ko -->
    <!-- ko if: viewModel.Issue.Status() == 'FINISHED' || viewModel.Issue.Status() == 'CLOSED' -->
        <h3 data-bind="text: 'Decision Made: ' + viewModel.decisionName()"></h3>
        <h4>Explanation:</h4>
        <br />
        <div data-bind="html: viewModel.Decision.Explanation"></div>
    <!-- /ko -->
}


<div data-bind="if: viewModel.OldDecisions().length > 0">
    <h3>Old Decisions</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Discard Date</th>
                <th>Decision</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: viewModel.OldDecisions">
            <tr>
                <td data-bind="text: moment(ChangeDate()).format('DD.MM.YY HH:mm')"></td>
                <td>
                    <strong data-bind="text: AlternativeName"></strong>
                    <br />
                    <div data-bind="html: Explanation"></div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
<script src="~/signalr/hubs"></script>
<script>

    var viewModelJs = @Html.Raw(Json.Encode(Model));

    for (var i = 0; i < viewModelJs.OldDecisions.length; i++){
        var alt = $.grep(viewModelJs.Alternatives, function(e){ return e.Id == viewModelJs.OldDecisions[i].AlternativeId; });
        viewModelJs.OldDecisions[i].AlternativeName = alt.Name
    }

    var viewModel = ko.mapping.fromJS(viewModelJs);

    //for owner init CKEDITOR
    if (viewModel.AccessRight() == 'O' && viewModel.Issue.Status() != 'CLOSED'){
        CKEDITOR.replace('explanationText',
        {
            customConfig: '/ckeditor/config.js'
        });
        if (viewModel.Decision.Explanation == null){
            CKEDITOR.instances['explanationText'].setData('')
        }else{
            CKEDITOR.instances['explanationText'].setData(viewModel.Decision.Explanation())
        }
    }

    viewModel.overthink = ko.computed(function() {
        if (viewModel.Decision.AlternativeId() != @Model.Decision.AlternativeId){
            if (viewModel.Decision.AlternativeId() != 0 && viewModel.AccessRight() == 'O'){
                CKEDITOR.instances['explanationText'].setData('')
            }
            return true;
        }

        else
            return false;
    });

    viewModel.update = ko.computed(function() {
        if (viewModel.Decision.AlternativeId() == @Model.Decision.AlternativeId && viewModel.Issue.Status() == "FINISHED" && viewModel.AccessRight() == "O"){
            CKEDITOR.instances['explanationText'].setData(viewModel.Decision.Explanation())
            return true;
        }else
            return false;
    });

    viewModel.decisionName = ko.computed(function(){
        if (viewModel.Issue.Status() == 'FINISHED' || viewModel.Issue.Status() == 'CLOSED'){
            for (var i = 0; i < viewModel.Alternatives().length; i++){
                if (viewModel.Decision.AlternativeId() == viewModel.Alternatives()[i].Id()){
                    return viewModel.Alternatives()[i].Name()
                }
            }
        }else{
            return 'NO DECISION'
        }
    })

    ko.applyBindings(viewModel);

    renderMenues()

    function onSaveClick() {
        var tmpVM = ko.toJS(viewModel.Decision)
        tmpVM.ChangeDate = "";
        tmpVM.Explanation = CKEDITOR.instances['explanationText'].getData()

        $.ajax({
            url: "/Issue/Decision?issueId=" + tmpVM.IssueId,
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: JSON.stringify(tmpVM),
            async: true,
            processData: false,
            complete: function (r) {
                window.location.reload(true);
            }
        })
    }

    function onUpdateClick(){
        var tmpVM = ko.toJS(viewModel.Decision);
        tmpVM.ChangeDate = "";
        tmpVM.Explanation = CKEDITOR.instances['explanationText'].getData()
        $.ajax({
            url: "/Issue/UpdateDecision",
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: JSON.stringify(tmpVM),
            async: true,
            processData: false,
            complete: function (r) {
                window.location.reload(true);
            }
        })

    }

    //SignalR
    $(function () {
        var notificationHub = $.connection.notificationHub;
        userAddedToIssue(notificationHub);

        nextStageNotification(notificationHub)

        notificationHub.client.decisionUpdated = function(decisionVM, changedByUserId){
            if (changedByUserId == viewModel.UserId()){
                return;
            }
            
            viewModel.OldDecisions.removeAll()
            for(var i = 0; i < decisionVM.OldDecisions.length; i++){
                var alt = $.grep(viewModelJs.Alternatives, function(e){ return e.Id == decisionVM.OldDecisions[i].AlternativeId; });
                decisionVM.OldDecisions[i].AlternativeName = alt.Name
                viewModel.OldDecisions.push(ko.mapping.fromJS(decisionVM.OldDecisions[i]))
            }
            
            viewModel.Issue.Status(decisionVM.Issue.Status)

            viewModel.Decision.AlternativeId(decisionVM.Decision.AlternativeId)
            viewModel.Decision.Explanation(decisionVM.Decision.Explanation)

            $.notify({
                icon: 'glyphicon glyphicon-info-sign',
                title: 'System Notificaion',
                message: 'Decision updated'
            },{
                delay: notDelay,
                type: 'info',
                placement: notPlacementCorner,
                animate: notAnimateCorner
            });
        }

        $.connection.hub.start().done(function () {

        });
    })
</script>