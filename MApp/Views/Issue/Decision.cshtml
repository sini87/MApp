@using PerpetuumSoft.Knockout
@model MApp.Web.ViewModel.DecisionVM
@{
    var ko = Html.CreateKnockoutContext();
    if (Model.Issue.Status == "DECISIONING")
    {
        ViewBag.Title = Model.Issue.Title + " - Decision Making";
    }
    else
    {
        ViewBag.Title = Model.Issue.Title + " - Final Decision";
    }

    bool visible, enabled;
    if (Model.AccessRight == "O")
    {
        visible = true;
        enabled = true;
    }else
    {
        visible = false;
        enabled = false;
    }
}

@if (Model.Issue.Status == "DECISIONING")
{
    <h2>@Model.Issue.Title - Decision Making</h2>
}
else
{
    <h2>@Model.Issue.Title - Final Decision</h2>
}

<div>
    <h3>Voting Results</h3>
    <table class="table">
        @foreach(var am in Model.Alternatives)
        {
            <tr>
                <td>@am.Name</td>
                <td>@String.Format("{0:0.00#}", am.Rating)</td>
            </tr>
        }
    </table>
</div>

@if (Model.AccessRight == "O")
{


    <div class="form-group">
        <div data-bind="foreach: viewModel.Alternatives">
            <label>
                <input type="radio" name="altRadio" data-bind="checkedValue: Id, checked: viewModel.Decision.AlternativeId" />
                <span data-bind="text: Name"></span>
                <br />
            </label>
        </div>
        <textarea data-bind="value: viewModel.Decision.Explanation" id="explanationText"></textarea>
    </div>
    if (Model.Issue.Status != "FINISHED")
    {
        <button id="save" type="button" class="btn btn-success" onclick="javascript: onSaveClick()">Make Decision</button>
    }
    else
    {
        <button id="makeDecisionBtn" type="button" class="btn btn-success" onclick="javascript: onSaveClick()" data-bind="visible: viewModel.overthink">Overthink Decision</button>
        <button id="updateDecisionBtn" type="button" class="btn btn-success" onclick="javascript: onUpdateClick()" data-bind="visible: viewModel.update">Update Explanation</button>
    }
}
else
{
    if (Model.Issue.Status != "FINISHED")
    {
        <h3>Issue owner has made no decision yet</h3>
    }else
    {
        <h3>Decision Made: @Model.Alternatives.Where(x => x.Id == Model.Decision.AlternativeId).FirstOrDefault().Name</h3>
        <h4>Explanation:</h4>
        <br />
        @Model.Decision.Explanation
    }
}

@if(Model.OldDecisions != null && Model.OldDecisions.Count > 0)
{
    <h3>Old Decisions</h3>
    <table class="table">
        <thead>
            <tr>
                <td>Discard Date</td>
                <td>Decision</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var dm in Model.OldDecisions)
            {
                <tr>
                    <td>@dm.ChangeDate</td>
                    <td>
                        <strong>@Model.Alternatives.Where(x => x.Id == dm.AlternativeId).FirstOrDefault().Name</strong>
                        <br />
                        @dm.Explanation
                    </td>
                </tr>
            }
        </tbody>
    </table>
    
}

<script>

    var viewModelJs = @Html.Raw(Json.Encode(Model));
    var viewModel = ko.mapping.fromJS(viewModelJs);

    viewModel.overthink = ko.computed(function() {
        if (viewModel.Decision.AlternativeId() != @Model.Decision.AlternativeId ){
            document.getElementById("explanationText").value = ""
            return true;
        }

        else
            return false;
    });

    viewModel.update = ko.computed(function() {
        if (viewModel.Decision.AlternativeId() == @Model.Decision.AlternativeId && viewModel.Issue.Status() == "FINISHED" && viewModel.AccessRight() == "O"){
            document.getElementById("explanationText").value = '@Model.Decision.Explanation';
            return true;
        }else
            return false;
    });

    ko.applyBindings(viewModel);


    renderMenues()
    function onSaveClick() {
        var tmpVM = ko.toJS(viewModel.Decision)
        tmpVM.ChangeDate = "";
        ko.utils.postJson("", { DecisionModel: tmpVM });
    }

    function onUpdateClick(){
        var tmpVM = ko.toJS(viewModel.Decision);
        tmpVM.ChangeDate = "";
        ko.utils.postJson("/Issue/UpdateDecision", { DecisionModel: tmpVM });
    }
</script>